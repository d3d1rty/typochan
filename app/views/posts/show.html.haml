#original-post.card
  .card-header
    .poster
      = "\"#{@post.subject}\" - #{@post.poster}"
    .post-menu
      - if signed_in?
        - if @post.flagged != true && @post.cleared != true
          = link_to 'Flag', flag_board_post_path(@board, @post), method: :post
          \|
        - if current_user.admin? || current.user.mod?
          - if @post.flagged == true
            = link_to 'Unflag', unflag_board_post_path(@board, @post), method: :post
            \|
          = link_to 'Destroy', board_post_path(@board, @post), method: :delete, data: { confirm: 'Are you sure?' }
    .posted-at
      = "#{time_ago_in_words(@post.created_at)} ago"
  .card-body
    %p
      = markdown(@post.body).html_safe
  .card-footer
    .add-reply
      = link_to 'Add a Reply', '#new-reply-form', 'onclick': "addReply('OP');", remote: true
    .replies
      - unless @replies.empty?
        - @replies.each_with_index do |reply, index|
          - if index.zero?
            \|
          - unless reply.child?
            = link_to "##{reply.id}", "##{reply.id}"
            \|
- @replies.each do |reply|
  .post-reply.card{ id: reply.id }
    .card-header
      .poster
        = reply.poster
        \-
        = "##{reply.id}"
      .post-menu
        - if signed_in?
          - if reply.flagged != true && reply.cleared != true
            = link_to 'Flag', flag_board_post_reply_path(@board, @post, reply), method: :post
            \|
          - if current_user.admin? || current_user.mod?
            - if reply.flagged == true
              = link_to 'Unflag', unflag_board_post_reply_path(@board, @post, reply), method: :post
              \|
            = link_to 'Destroy', board_post_reply_path(@board, @post, reply), method: :delete, data: { confirm: 'Are you sure?' }
      .posted-at
        = "#{time_ago_in_words(reply.created_at)} ago"
    .card-body
      %p
        %b Replying to:
        - if reply.child?
          = link_to "##{reply.parent_id}", "##{reply.parent_id}"
        - else
          = link_to 'OP', '#original-post'
      = markdown(reply.body).html_safe
    .card-footer
      = link_to 'Add a Reply', '#new-reply-form', 'onclick': "addReply(#{reply.id});", remote: true
      - unless reply.leaf?
        %p
          Replies:
          - reply.child_ids.each_with_index do |child_id, index|
            - if index.zero?
              \|
            = link_to "##{child_id}", "##{child_id}"
            \|

= render partial: '/replies/new', objects: [@board, @post, @reply]
:javascript
  // Sets value of reply-to field for reply being replied to.
  function addReply(reply_id) {
    let reply_to_field = document.querySelector('#reply-to');
    reply_to_field.setAttribute('value', reply_id);
    window.location.href = '#new-reply-form';
  }

  function previewReply() {
    let text = document.querySelector('#reply_body').value;
    document.querySelector('#preview-reply-link').setAttribute('data-params', '[preview]text='+text);
  };

  function resetPreview() {
    let preview_container = document.querySelector('#preview-container');
    while (preview_container.firstChild) {
      preview_container.removeChild(preview_container.firstChild);
    }

    let preview_node = document.createElement('div');
    preview_node.setAttribute('id', 'preview');
    preview_container.appendChild(preview_node);
  };

  document.querySelector('#preview-reply-link').addEventListener('ajax:success', function(event) {
    resetPreview();
    document.querySelector('#preview-container').setAttribute('style', 'visibility:visible;');
    let xhr = event.detail[2];
    document.querySelector('#preview').insertAdjacentHTML('afterend', xhr.response);
    window.location.href = '#preview-container';
  }, false);
